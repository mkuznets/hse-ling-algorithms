# coding: utf-8
#  Move Zeroes Напишите функцию, принимающую массив целых чисел, которая перемещает нули в конец массива, сохраняя
#  порядок ненулевых элементов. Например, если исходный массив [0,1,0,3,12], после применения функции он должен быть
# равен [1,3,12,0,0]. Обратите внимание, что функция не должна ничего возвращаеть, все изменения совершаются в исходном
# массиве (т.е. in-place). Время работы: O(n). Дополнительная память: O(1).

class Solution(object):
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        # nums2 = []
        # for number in nums:
        #     if number != 0:
        #         nums2.append(number)
        #
        # for i in range(len(nums) - len(nums2)):
        #     nums2.append(0)
        #
        # nums[:] = nums2  # провоцирует пере-создание списка nums
        #
        # # [1, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,2]
        # # [1, 2, ]

        v = -1     # фиктивное значение, которое показывает, что нулей мы еще не встречали
        for i in range(len(nums)):
            if nums[i] == 0:
                if v == -1:
                    v = i
            else:
                if v != -1:
                    nums[v] = nums[i]
                    nums[i] = 0
                    v += 1


L = [1, 0, 0, 2, 0, 3, 4, 0, 0, 0, 5]
sol = Solution()
sol.moveZeroes(L)
print(L)







# [1, 0, 0, 2, 0, 3, 4, 0, 0, 0, 5]
#     v
# [1, 0, 0, 2, 0, 3, 4, 0, 0, 0, 5]
#     v
# [1, 0, 0, 2, 0, 3, 4, 0, 0, 0, 5]
#        v
# [1, 2, 0, 0, 0, 3, 4, 0, 0, 0, 5]


# [1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0]



#     v
# [7, 0, 3]
#        v
# [7, 3, 0]